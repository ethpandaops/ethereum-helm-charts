# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- blockscout container image repository
  repository: blockscout/blockscout
  # -- blockscout container image tag
  tag: "5.1.5"
  # -- blockscout container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the blockscout container
customArgs: []
  #- -config-file=/somehwere-else.yaml
  #- -output-dir=public

# -- Command replacement for the blockscout container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
# https://docs.blockscout.com/for-developers/information-and-settings/env-variables
config:
  MIX_ENV: prod
  PORT: '{{ include "blockscout.httpPort" . }}'
  DATABASE_URL: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql:5432/blockscout?ssl=false
  SECRET_KEY_BASE: RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5
  ECTO_USE_SSL: "false"
  ETHEREUM_JSONRPC_VARIANT: geth
  ETHEREUM_JSONRPC_HTTP_URL: http://geth:8545
  #ETHEREUM_JSONRPC_WS_URL: ws://geth:8546
  #ETHEREUM_JSONRPC_TRACE_URL: http://geth:8545
  NETWORK: Ethereum
  #SUBNETWORK: Testnet

  # Branding related configs
  LOGO: /images/blockscout_logo.svg
  FOOTER_LOGO: /images/blockscout_logo.svg

  # Rate limiting
  #API_RATE_LIMIT_DISABLED=true
  API_RATE_LIMIT_TIME_INTERVAL: 1s
  API_RATE_LIMIT_BY_IP_TIME_INTERVAL: 5m
  API_RATE_LIMIT: "50"
  API_RATE_LIMIT_BY_KEY: "50"
  API_RATE_LIMIT_BY_WHITELISTED_IP: "50"
  API_RATE_LIMIT_WHITELISTED_IPS: ""
  API_RATE_LIMIT_STATIC_API_KEY: ""
  API_RATE_LIMIT_UI_V2_WITH_TOKEN: "5"
  API_RATE_LIMIT_BY_IP: "3000"
  # API_RATE_LIMIT_HAMMER_REDIS_URL: redis://{{ .Release.Name }}-redis:6379/1
  # API_RATE_LIMIT_IS_BLOCKSCOUT_BEHIND_PROXY: false
  API_RATE_LIMIT_UI_V2_TOKEN_TTL_IN_SECONDS: "18000"

  # Smart contract verification related configs
  MICROSERVICE_SC_VERIFIER_ENABLED: '{{ (index .Values "smart-contract-verifier-http").enabled }}'
  MICROSERVICE_SC_VERIFIER_URL: http://{{ .Release.Name }}-smart-contract-verifier-http:8050
  MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier

  # Account related configs: https://docs.blockscout.com/for-developers/configuration-options/my-account-settings
  ACCOUNT_ENABLED: "false"
  #ACCOUNT_REDIS_URL: redis://{{ .Release.Name }}-redis:6379/0
  #ACCOUNT_AUTH0_DOMAIN: login.blockscout.com
  #ACCOUNT_AUTH0_CLIENT_ID: ...
  #ACCOUNT_AUTH0_CLIENT_SECRET: ...
  #ACCOUNT_SENDGRID_API_KEY: ...
  #ACCOUNT_SENDGRID_SENDER: noreply@blockscout.com
  #ACCOUNT_SENDGRID_TEMPLATE: d-...
  #ACCOUNT_PUBLIC_TAGS_AIRTABLE_URL: https://api.airtable.com/v0/.../Public%20Tags
  #ACCOUNT_PUBLIC_TAGS_AIRTABLE_API_KEY: key...
  #ACCOUNT_CLOAK_KEY: ...
  #ACCOUNT_DATABASE_URL: postgresql://user:pass@host:port/db

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 0
  runAsGroup: 0
  runAsNonRoot: false
  runAsUser: 0

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 60

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update stategy for the Statefulset
updateStrategy:
  # -- Update stategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15.3.0-debian-11-r7
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
  persistence:
    enabled: true
    size: 8Gi

redis:
  enabled: false
  replica:
    replicaCount: 1

smart-contract-verifier-http:
  enabled: false
