# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- dshackle container image repository
  repository: emeraldpay/dshackle
  # -- dshackle container image tag
  tag: "0.10"
  # -- dshackle container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the dshackle container
customArgs: []
  #- -config-file=/somehwere-else.yaml
  #- -output-dir=public

# -- Command replacement for the dshackle container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config: |
  version: v1
  port: 2449
  tls:
    enabled: false

  proxy:
    host: 0.0.0.0
    port: 8545
    routes:
      - id: eth
        blockchain: ethereum

  cluster:
    upstreams:
      - id: infura-eth
        chain: ethereum
        connection:
          ethereum:
            rpc:
              url: "https://mainnet.infura.io/v3/${INFURA_USER}"
            ws:
              url: "wss://mainnet.infura.io/ws/v3/${INFURA_USER}"

  monitoring:
    enabled: true
    jvm: false
    extended: false
    prometheus:
      enabled: true
      bind: 0.0.0.0
      port: 8081
      path: /metrics

  health:
    port: 8082
    host: 0.0.0.0
    path: /health
    blockchains:
      - chain: ethereum-mainnet
        min-available: 1

  cache:
    redis:
      enabled: true
      host: dshackle-redis-master
      port: 6379
      db: 0
      password: ${REDIS_PASSWORD}

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: 8545
  initialDelaySeconds: 60
  periodSeconds: 30

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: 8545
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update stategy for the Statefulset
updateStrategy:
  # -- Update stategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx3000m -Xms3000m"

# -- Additional env variables injected via a created secret
secretEnv:
  INFURA_USER: your-infura-secret # Used in config file
  REDIS_PASSWORD: yourRedisSecret # Used in config file

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

redis:
  # -- If enabled a redis chart will be deployed as a dependency
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6.2.6-debian-10-r21
    pullPolicy: IfNotPresent
  auth:
    password: yourRedisSecret
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 0
    persistence:
      enabled: false
      size: 8Gi
