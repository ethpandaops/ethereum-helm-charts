apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dora.fullname" . }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "dora.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dora.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "dora.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
              - ./dora-explorer
              - -config
              - /data/config.yaml
          {{- end }}
          {{- if gt (len .Values.extraArgs) 0 }}
          args:
            {{- toYaml .Values.extraArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/data/config.yaml"
              subPath: config.yaml
              readOnly: true
            - name: ranges
              mountPath: "/data/ranges.yaml"
              subPath: ranges.yaml
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "dora.fullname" . }}-config
        - name: ranges
          configMap: 
            name: {{ include "dora.fullname" . }}-ranges
