# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- dora container image repository
  repository: ethpandaops/dora
  # -- dora container image tag
  tag: master
  # -- dora container pull policy
  pullPolicy: Always

# -- An array of endpoints to use for the explorer
# -- url is the only required field
endpoints:
  - name: default-endpoint
    url: "http://beacon-node:5052"
    priority: 1
    archive: false
    headers:
      "X-Test": "test"
      "Y-Test": "test2"

# -- Name of the network ("mainnet", "goerli", "sepolia", "holesky")
name: mainnet

# -- This can be a url here for example:
# -- "https://config.dencun-devnet-8.ethpandaops.io/api/v1/nodes/validator-ranges"
# -- If you want to use a local range file define it in the values.yaml ranges section
validatorNamesInventory: ""

# -- Path to the network config file
# -- This can be a url or a local path
# -- "https://config.dencun-devnet-8.ethpandaops.io/cl/config.yaml"
configPath: ""

# -- Link to the el block explorer
ethExplorerLink: ""

# -- Number of proxy servers in front of the explorer
proxyCount: 1

# -- Page call limit per second per user
callRateLimit: 2

# -- Page call burst limit per user
callRateBurst: 10


# -- Config file
# @default -- See `values.yaml`
config: |
    logging:
      outputLevel: "info"
      #outputStderr: false

      #filePath: "explorer.log"
      #fileLevel: "warn"

    # Chain network configuration
    chain:
      # use built in config by name ("mainnet", "prater", "sepolia")
      name: "{{ .Values.name }}"
      configPath: "{{ .Values.configPath }}"
      displayName: "{{ .Values.name }}"

    # HTTP Server configuration
    server:
      host: "0.0.0.0" # Address to listen on
      port: "{{ .Values.httpPort }}" # Port to listen on

    frontend:
      enabled: true # Enable or disable to web frontend
      debug: false
      minimize: false # minimize html templates

      # Name of the site, displayed in the title tag
      siteName: "Dora the Explorer"
      siteSubtitle: "{{ .Values.name }}"

      # link to EL Explorer
      ethExplorerLink: "{{ .Values.ethExplorerLink }}"

      # file or inventory url to load validator names from
      validatorNamesYaml: "/data/ranges.yaml"
      validatorNamesInventory: "{{ .Values.validatorNamesInventory }}"

    rateLimit:
      enabled: true
      proxyCount: {{ .Values.proxyCount }}
      rate: {{ .Values.callRateLimit }}
      burst: {{ .Values.callRateBurst }}

    beaconapi:
      # CL Client RPC
      endpoints:
        {{- range .Values.endpoints }}
        - url: {{ .url | quote }}
          {{- if .name }}
          name: {{ .name | quote }}
          {{- end }}
          {{- if .priority }}
          priority: {{ .priority }}
          {{- end }}
          {{- if .archive }}
          archive: {{ .archive }}
          {{- end }}
          {{- if .headers }}
          headers:
          {{- range $key, $value := .headers }}
            {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
          {{- end }}
          {{- end }}
        {{- end }}

      # local cache for page models
      localCacheSize: 100 # 100MB

      # remote cache for page models
      redisCacheAddr: ""
      redisCachePrefix: ""

    # indexer keeps track of the latest epochs in memory.
    indexer:
      # max number of epochs to keep in memory
      inMemoryEpochs: 6

      # disable synchronizing and everything that writes to the db (indexer just maintains local cache)
      disableIndexWriter: false

      # number of seconds to wait between each epoch (don't overload CL client)
      syncEpochCooldown: 2

    database:
      engine: "pgsql"
      pgsql:
        host: "{{ tpl .Values.postgresql.name $ }}"
        port: 5432
        user: "{{ .Values.postgresql.auth.username }}"
        password: "{{ .Values.postgresql.auth.password }}"
        name: "{{ .Values.postgresql.auth.database }}"

ranges: |
  0-1: test

# - HTTP port for dora interface
httpPort: 8080

# -- Extra args for the dora container
extraArgs: []

# -- Command replacement for the dora container
customCommand: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update stategy for the Statefulset
updateStrategy:
  # -- Update stategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  name: "{{ .Release.Name }}-postgresql"
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15.3.0-debian-11-r7
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    database: dora
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
  persistence:
    enabled: true
    size: 8Gi
