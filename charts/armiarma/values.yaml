# -- Global values
global:
  postgresql:
    auth:
      postgresqlPassword: postgres
      user: postgres
      password: postgres
      database: armiarmadb

# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- armiarma container image repository
  repository: ethpandaops/armiarma
  # -- armiarma container image tag
  tag: master
  # -- armiarma container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the armiarma container
customArgs:
  - eth2
  - --persist-connevents=false
  - --persist-msgs=false

# -- Command replacement for the armiarma container
customCommand: []

# -- Env variables injected via a created secret
secretEnv:
  ARMIARMA_LOG_LEVEL: "info"
  ARMIARMA_PSQL: "postgres://{{ $.Values.global.postgresql.auth.user }}:{{ $.Values.global.postgresql.auth.password }}@{{ include \"armiarma.fullname\" $ }}-postgresql:5432/{{ $.Values.global.postgresql.auth.database }}"
  ARMIARMA_BACKUP_INTERVAL: "12h"
  ARMIARMA_FORK_DIGEST: "0x4a26c58b"
  ARMIARMA_GOSSIP_TOPICS: "beacon_block"
  ARMIARMA_SUBNETS: "all"

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

# -- Metrics port
metricsPort: 9080

# -- SSE port
ssePort: 9099

ingress:
  # -- Ingress resource for exposing the SSE port
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Postgresql subchart configuration
postgresql:
  enabled: true
  nameOverride: "postgresql"
  image:
    repository: bitnami/postgresql
    tag: 14-debian-11

  primary:
    persistence:
      enabled: true
      size: 8Gi
  postgresqlDatabase: armiarmadb
  postgresqlUsername: postgres
  postgresqlPassword: postgres
