# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- geth container image repository
  repository: ethereum/client-go
  # -- geth container image tag
  tag: stable
  # -- geth container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the geth container
extraArgs:
  - --networkid=999999
  - --verbosity=4
  - --ipcpath=/tmp/geth.ipc
  - --maxpeers=10


# -- TOML config file
# @default -- See `values.yaml` for example
config: |
  [Node.P2P]
  DialRatio = 3

  [P2P]
  StaticNodes = [
    "enode:"enode://b4b4596373fb880c342295d71d5ca566a183577bc3d258faf29379830f7e6e93fd32c01560190cb6744173efc002f5c375d5430147d9d973589d20a9f113dad2@10.244.4.77:30303?discport=0",
    "enode:","enode://1c5bb09c945c386cf8f61f298ff2805c82861dd5b711a79cc769382aaff05adee4c2cd3a781f47c59a86c7341a49e3025dbbc7192a548286fb23189c9fb015fb@10.244.4.78:30303?discport=0"
  ]

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

PVCConfigs:
  genesis:
    enabled: false
    pvcName: genesis-data-pvc
    storageClassName: azurefile


# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec geth
    --datadir=/data/network/$HOSTNAME
    --config=/config/geth.toml
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port={{ include "geth.p2pPort" . }}
    {{- end }}
  {{- end }}
    --http
    --http.addr=0.0.0.0
    --http.port={{ .Values.httpPort }}
    --http.vhosts=*
    --http.corsdomain=*
    --ws
    --ws.addr=0.0.0.0
    --ws.port={{ .Values.wsPort }}
    --ws.origins=*
    --authrpc.jwtsecret=/data/jwt.hex
    --authrpc.addr=0.0.0.0
    --authrpc.port={{ .Values.authPort }}
    --authrpc.vhosts=*
    --metrics
    --metrics.addr=0.0.0.0
    --metrics.port={{ .Values.metricsPort }}
    --bootnodes="enode://8135b2f290485445a95557538c35dfd0121b8f8fbbb43f5782aca49b8dbfa297c7c48ec610a0fe3a5424a5acc458c116aba0c30f800f8cee662fae06140a14da@10.244.4.169:0?discport=30303"
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

p2pUdpPort: 30303

# -- HTTP Port
httpPort: 8545

# -- WS Port
wsPort: 8546

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 6060

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: true
  # -- Use an existing PVC when persistence.enabled
  existingClaim: genesis-data-pvc
  # -- Access mode for the volume claim template
  accessModes:
    - ReadWriteMany
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: azurefile
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
    # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
        - "nodes"
      verbs:
        - "get"
        - "list"
        - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the serices nodePort.
    - apiGroups: [""]
      resources:
        - "services"
      verbs:
        - "get"
        - "list"
        - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update stategy for the Statefulset
updateStrategy:
  # -- Update stategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers or extraContainerPorts
extraPorts: []

# -- Additional ports for the main container
extraContainerPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: "mqubeosscluster.azurecr.io/mqube-geth"
    tag: 0.0.6
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  command:
    - sh
    - -c
    - |
      cp /config/init-script.sh /tmp/init-script.sh
      chmod +x /tmp/init-script.sh
      /tmp/init-script.sh

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /debug/metrics/prometheus
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []
