apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "spamoor.fullname" . }}
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  serviceName: {{ include "spamoor.fullname" . }}
  replicas: 1
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  selector:
    matchLabels:
      {{- include "spamoor.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "spamoor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "spamoor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- if .Values.sqlite.enabled }}
          - name: SPAMOOR_SQLITE_PATH
            value: {{ .Values.sqlite.path | quote }}
          {{- end }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.sqlite.enabled }}
            - name: sqlite-data
              mountPath: {{ dir .Values.sqlite.path }}
            {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  volumeClaimTemplates:
  {{- if .Values.sqlite.enabled }}
  - metadata:
      name: sqlite-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.sqlite.persistence.storageClass }}
      storageClassName: {{ .Values.sqlite.persistence.storageClass | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.sqlite.persistence.size | quote }}
  {{- end }}