name: Test Devnet Functionality

on:
  pull_request:
    paths:
      - 'charts/*/values.yaml'
      - 'charts/*/templates/**'
      - 'charts/*/ci/devnet-values.yaml'
  workflow_dispatch:

jobs:
  test-devnet:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        client:
          # Execution clients
          - besu
          - erigon
          - ethereumjs
          - geth
          - nethermind
          - reth
          # Consensus clients
          - grandine
          - lighthouse
          - lodestar
          - nimbus
          - prysm
          - teku
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: v3.18.4

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Test devnet configuration exists
        run: |
          if [ ! -f "charts/${{ matrix.client }}/ci/devnet-values.yaml" ]; then
            echo "❌ Missing devnet-values.yaml for ${{ matrix.client }}"
            exit 1
          fi
          echo "✅ Found devnet-values.yaml for ${{ matrix.client }}"

      - name: Validate devnet template rendering
        run: |
          echo "🔍 Testing devnet template rendering for ${{ matrix.client }}"
          
          # Test with devnet disabled (default)
          helm template test-default charts/${{ matrix.client }} > /tmp/default.yaml
          
          # Test with devnet enabled
          helm template test-devnet charts/${{ matrix.client }} -f charts/${{ matrix.client }}/ci/devnet-values.yaml > /tmp/devnet.yaml
          
          # Verify devnet-specific configurations appear in the devnet template
          if grep -q "devnet" /tmp/devnet.yaml; then
            echo "✅ Devnet configuration found in template for ${{ matrix.client }}"
          else
            echo "⚠️  No devnet configuration found in template for ${{ matrix.client }} (may be conditional)"
          fi
          
          # Verify no devnet configuration in default template
          if ! grep -q "devnet" /tmp/default.yaml; then
            echo "✅ No devnet configuration in default template for ${{ matrix.client }}"
          else
            echo "❌ Unexpected devnet configuration in default template for ${{ matrix.client }}"
            exit 1
          fi

      - name: Test devnet installation (dry-run)
        run: |
          echo "🚀 Testing devnet installation for ${{ matrix.client }}"
          helm install test-devnet-${{ matrix.client }} charts/${{ matrix.client }} \
            -f charts/${{ matrix.client }}/ci/devnet-values.yaml \
            --dry-run \
            --debug

      - name: Verify devnet values structure
        run: |
          echo "📝 Verifying devnet values structure for ${{ matrix.client }}"
          
          # Check that devnet section exists in values.yaml
          if ! grep -q "^devnet:" charts/${{ matrix.client }}/values.yaml; then
            echo "❌ Missing devnet section in values.yaml for ${{ matrix.client }}"
            exit 1
          fi
          
          # Check that devnet is enabled in CI values
          if ! grep -q "enabled: true" charts/${{ matrix.client }}/ci/devnet-values.yaml; then
            echo "❌ Devnet not enabled in CI values for ${{ matrix.client }}"
            exit 1
          fi
          
          echo "✅ Devnet values structure valid for ${{ matrix.client }}"

  test-devnet-summary:
    runs-on: ubuntu-latest
    needs: test-devnet
    if: always()
    steps:
      - name: Summary
        run: |
          echo "🎯 Devnet functionality testing complete"
          echo "All Ethereum clients now support devnet configuration!"
          echo ""
          echo "To use devnet support, set:"
          echo "  devnet:"
          echo "    enabled: true"
          echo "    name: \"devnet-3\"  # or your devnet name"